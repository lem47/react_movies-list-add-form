{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","handleSubmit","event","preventDefault","props","onAdd","setState","this","onSubmit","type","name","placeholder","value","onChange","target","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"myEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,cCGfC,G,MAAb,4MACEC,MAAe,CACbd,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,IANZ,EASEG,aAAe,SAACC,GACdA,EAAMC,iBAED,EAAKH,MAAMd,OACR,EAAKc,MAAMb,aACX,EAAKa,MAAMZ,QACX,EAAKY,MAAMX,SACX,EAAKW,MAAMF,SAInB,EAAKM,MAAMC,MAAM,EAAKL,OAEtB,EAAKM,SAAS,CACZpB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,OA3Bd,4CA+BE,WAAU,IAAD,OACP,EAMIS,KAAKP,MALPd,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OAGF,OACE,uBACEU,SAAUD,KAAKN,aACfX,UAAU,OAFZ,UAIE,oBAAIA,UAAU,cAAd,6BAIA,gCACE,uBACEmB,KAAK,OACLC,KAAK,QACLpB,UAAU,cACVqB,YAAY,gBACZC,MAAO1B,EACP2B,SAAU,SAACX,GACT,EAAKI,SAAS,CACZpB,MAAOgB,EAAMY,OAAOF,aAM5B,0BACEF,KAAK,cACLpB,UAAU,iBACVqB,YAAY,sBACZC,MAAOzB,EACP0B,SAAU,SAACX,GACT,EAAKI,SAAS,CACZnB,YAAae,EAAMY,OAAOF,WAKhC,gCACE,uBACEH,KAAK,OACLC,KAAK,SACLpB,UAAU,cACVqB,YAAY,gBACZC,MAAOxB,EACPyB,SAAU,SAACX,GACT,EAAKI,SAAS,CACZlB,OAAQc,EAAMY,OAAOF,aAM7B,gCACE,uBACEH,KAAK,OACLC,KAAK,UACLpB,UAAU,cACVqB,YAAY,iBACZC,MAAOvB,EACPwB,SAAU,SAACX,GACT,EAAKI,SAAS,CACZjB,QAASa,EAAMY,OAAOF,aAM9B,gCACE,uBACEH,KAAK,OACLC,KAAK,SACLpB,UAAU,cACVqB,YAAY,gBACZC,MAAOd,EACPe,SAAU,SAACX,GACT,EAAKI,SAAS,CACZR,OAAQI,EAAMY,OAAOF,aAM7B,wBACEH,KAAK,SACLnB,UAAU,eAFZ,wBAzHR,GAA8ByB,c,OCLjBC,EAAb,4MACEhB,MAAe,CACbL,OAAQsB,GAFZ,EAKEC,SAAW,SAACrB,GACV,EAAKS,UAAS,SAAAN,GAAK,MAAK,CACtBL,OAAO,GAAD,mBAAMK,EAAML,QAAZ,CAAoBE,SAPhC,4CAWE,WACE,IAAQF,EAAWY,KAAKP,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUe,MAAOE,KAAKW,oBApBhC,GAAyBC,IAAMJ,WCN/BK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.db0a1dd5.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (!this.state.title\n        || !this.state.description\n        || !this.state.imgUrl\n        || !this.state.imdbUrl\n        || !this.state.imdbId) {\n      return;\n    }\n\n    this.props.onAdd(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"Form\"\n      >\n        <h1 className=\"Form__title\">\n          Add a new movie\n        </h1>\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"Form__input\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              this.setState({\n                title: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <textarea\n          name=\"description\"\n          className=\"Form__textarea\"\n          placeholder=\"Enter a description\"\n          value={description}\n          onChange={(event) => {\n            this.setState({\n              description: event.target.value,\n            });\n          }}\n        />\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className=\"Form__input\"\n            placeholder=\"Add an imgUrl\"\n            value={imgUrl}\n            onChange={(event) => {\n              this.setState({\n                imgUrl: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className=\"Form__input\"\n            placeholder=\"Add an imdbUrl\"\n            value={imdbUrl}\n            onChange={(event) => {\n              this.setState({\n                imdbUrl: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            className=\"Form__input\"\n            placeholder=\"Add an imdbId\"\n            value={imdbId}\n            onChange={(event) => {\n              this.setState({\n                imdbId: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"Form__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}