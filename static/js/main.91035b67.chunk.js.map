{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","urlCheck","NewMovie","state","imgUrlError","imgUrlErrorMessage","imdbUrlError","imdbUrlErrorMessage","formError","formErrorMessage","imgUrlValidation","test","setState","imdbUrlValidation","handleSubmit","event","preventDefault","trim","props","onAdd","this","onSubmit","type","name","placeholder","value","onChange","target","onBlur","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91035b67.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst urlCheck = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imgUrlError: boolean,\n  imgUrlErrorMessage: string,\n  imdbUrl: string,\n  imdbUrlError: boolean,\n  imdbUrlErrorMessage: string,\n  imdbId: string,\n  formError: boolean,\n  formErrorMessage: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imgUrlError: false,\n    imgUrlErrorMessage: '',\n    imdbUrl: '',\n    imdbUrlError: false,\n    imdbUrlErrorMessage: '',\n    imdbId: '',\n    formError: false,\n    formErrorMessage: '',\n  };\n\n  imgUrlValidation = () => {\n    if (!urlCheck.test(this.state.imgUrl)) {\n      this.setState((state) => ({\n        ...state,\n        imgUrlError: true,\n        imgUrlErrorMessage: 'Please enter valid URL',\n      }));\n    } else {\n      this.setState((state) => ({\n        ...state,\n        imgUrlError: false,\n        imgUrlErrorMessage: '',\n      }));\n    }\n  };\n\n  imdbUrlValidation = () => {\n    if (!urlCheck.test(this.state.imdbUrl)) {\n      this.setState((state) => ({\n        ...state,\n        imdbUrlError: true,\n        imdbUrlErrorMessage: 'Please enter valid URL',\n      }));\n    } else {\n      this.setState((state) => ({\n        ...state,\n        imdbUrlError: false,\n        imdbUrlErrorMessage: '',\n      }));\n    }\n  };\n\n  handleSubmit = (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n\n    if (!this.state.title.trim()\n        || !this.state.description.trim()\n        || !this.state.imgUrl.trim()\n        || this.state.imgUrlError\n        || !this.state.imdbUrl.trim()\n        || this.state.imdbUrlError\n        || !this.state.imdbId.trim()) {\n      this.setState((state) => ({\n        ...state,\n        formError: true,\n        formErrorMessage:\n        'All this fields are required',\n      }));\n\n      return;\n    }\n\n    this.props.onAdd(this.state);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imgUrlError: false,\n      imgUrlErrorMessage: '',\n      imdbUrl: '',\n      imdbUrlError: false,\n      imdbUrlErrorMessage: '',\n      imdbId: '',\n      formError: false,\n      formErrorMessage: '',\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className=\"Form\"\n      >\n        <h1 className=\"Form__title\">\n          Add a new movie\n        </h1>\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"Form__input\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              this.setState({\n                title: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        <textarea\n          name=\"description\"\n          className=\"Form__textarea\"\n          placeholder=\"Enter a description\"\n          value={description}\n          onChange={(event) => {\n            this.setState({\n              description: event.target.value,\n            });\n          }}\n        />\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            className=\"Form__input\"\n            placeholder=\"Add an imgUrl\"\n            value={imgUrl}\n            onBlur={this.imgUrlValidation}\n            onChange={(event) => {\n              this.setState({\n                imgUrl: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        {this.state.imgUrlError && (\n          <p className=\"Form__error\">\n            {this.state.imgUrlErrorMessage}\n          </p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            className=\"Form__input\"\n            placeholder=\"Add an imdbUrl\"\n            value={imdbUrl}\n            onBlur={this.imdbUrlValidation}\n            onChange={(event) => {\n              this.setState({\n                imdbUrl: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        {this.state.imdbUrlError && (\n          <p className=\"Form__error\">\n            {this.state.imdbUrlErrorMessage}\n          </p>\n        )}\n\n        <label>\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            className=\"Form__input\"\n            placeholder=\"Add an imdbId\"\n            value={imdbId}\n            onChange={(event) => {\n              this.setState({\n                imdbId: event.target.value,\n              });\n            }}\n          />\n        </label>\n\n        {this.state.formError && (\n          <p className=\"Form__error\">\n            {this.state.formErrorMessage}\n          </p>\n        )}\n\n        <button\n          type=\"submit\"\n          className=\"Form__button\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}